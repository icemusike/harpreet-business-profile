---
const experiences = [
  {
    period: "2020 - Present",
    title: "Senior Virtual Assistant & Team Lead",
    company: "Global Virtual Solutions",
    description: "Leading a team of 5 virtual assistants, managing client relationships, and overseeing project deliverables for multiple high-profile clients."
  },
  {
    period: "2018 - 2020",
    title: "Virtual Team Coordinator",
    company: "Remote Work Experts",
    description: "Coordinated remote teams across different time zones, implemented efficient communication protocols, and managed project timelines."
  },
  {
    period: "2016 - 2018",
    title: "Executive Virtual Assistant",
    company: "Executive Support Services",
    description: "Provided comprehensive administrative support to C-level executives, including calendar management, travel arrangements, and document preparation."
  },
  {
    period: "2014 - 2016",
    title: "Customer Support Specialist",
    company: "Tech Solutions Inc.",
    description: "Handled customer inquiries, resolved technical issues, and maintained high customer satisfaction ratings through responsive service."
  }
];

const skills = [
  { name: "Team Management", percentage: 95 },
  { name: "Project Coordination", percentage: 90 },
  { name: "Administrative Support", percentage: 98 },
  { name: "Customer Service", percentage: 92 },
  { name: "MS Office Suite", percentage: 95 },
  { name: "CRM Systems", percentage: 88 },
  { name: "Social Media Management", percentage: 85 },
  { name: "Process Optimization", percentage: 90 }
];
---

<section id="experience" class="section experience">
  <div class="container">
    <h2 class="section-title text-center">Experience & Skills</h2>
    
    <div class="experience-container">
      <div class="timeline">
        <h3>Work Experience</h3>
        {experiences.map(exp => (
          <div class="timeline-item">
            <div class="timeline-dot"></div>
            <div class="timeline-content card">
              <span class="date">{exp.period}</span>
              <h4>{exp.title}</h4>
              <h5>{exp.company}</h5>
              <p>{exp.description}</p>
            </div>
          </div>
        ))}
      </div>
      
      <div class="skills">
        <h3>Professional Skills</h3>
        <div class="skills-container">
          {skills.map(skill => (
            <div class="skill-item">
              <div class="skill-info">
                <span class="skill-name">{skill.name}</span>
                <span class="skill-percentage">{skill.percentage}%</span>
              </div>
              <div class="skill-bar">
                <div class="skill-progress" style={`width: ${skill.percentage}%`}></div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .experience {
    background-color: var(--background);
  }

  .experience-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
  }

  .timeline, .skills {
    padding: 2rem;
    background-color: var(--card-bg);
    border-radius: 10px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
  }

  .timeline h3, .skills h3 {
    margin-bottom: 2rem;
    color: var(--primary);
    position: relative;
    padding-bottom: 0.5rem;
  }

  .timeline h3::after, .skills h3::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 50px;
    height: 3px;
    background-color: var(--primary);
  }

  .timeline-item {
    position: relative;
    padding-left: 2rem;
    margin-bottom: 2.5rem;
  }

  .timeline-item:last-child {
    margin-bottom: 0;
  }

  .timeline-dot {
    position: absolute;
    left: -8px;
    top: 0;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background-color: var(--primary);
    border: 3px solid var(--card-bg);
  }

  .timeline-item::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 2px;
    background-color: var(--primary-light);
  }

  .timeline-content {
    padding: 1.5rem;
    margin: 0;
  }

  .date {
    display: inline-block;
    padding: 0.3rem 1rem;
    background-color: var(--primary-light);
    color: var(--text-light);
    border-radius: 20px;
    font-size: 0.8rem;
    margin-bottom: 1rem;
  }

  .timeline-content h4 {
    margin-bottom: 0.5rem;
    color: var(--primary-dark);
  }

  .timeline-content h5 {
    margin-bottom: 1rem;
    color: var(--primary);
    font-weight: 500;
  }

  .skill-item {
    margin-bottom: 1.5rem;
  }

  .skill-info {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
  }

  .skill-name {
    font-weight: 600;
  }

  .skill-percentage {
    color: var(--primary);
    font-weight: 600;
  }

  .skill-bar {
    height: 10px;
    background-color: var(--secondary);
    border-radius: 5px;
    overflow: hidden;
  }

  .skill-progress {
    height: 100%;
    background: linear-gradient(90deg, var(--primary) 0%, var(--primary-light) 100%);
    border-radius: 5px;
    transition: width 1.5s ease-in-out;
  }

  @media (max-width: 992px) {
    .experience-container {
      grid-template-columns: 1fr;
    }

    .timeline, .skills {
      margin-bottom: 2rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const skillBars = document.querySelectorAll('.skill-progress');
    
    // Reset width to 0 initially
    skillBars.forEach(bar => {
      bar.style.width = '0';
    });
    
    // Create an intersection observer
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // When skills section is visible, animate the bars
          setTimeout(() => {
            skillBars.forEach(bar => {
              const width = bar.getAttribute('style').split(':')[1].trim();
              bar.style.width = width;
            });
          }, 200);
          
          // Unobserve after animation
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.2 });
    
    // Observe the skills container
    const skillsContainer = document.querySelector('.skills-container');
    if (skillsContainer) {
      observer.observe(skillsContainer);
    }
  });
</script>
