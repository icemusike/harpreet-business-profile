---
const testimonials = [
  {
    name: "Sarah Johnson",
    position: "CEO, TechStart Inc.",
    image: "https://randomuser.me/api/portraits/women/1.jpg",
    text: "Harpreet has been an invaluable asset to our team. Her organizational skills and ability to manage multiple projects simultaneously have significantly improved our productivity. She's proactive, detail-oriented, and always goes above and beyond."
  },
  {
    name: "Michael Chen",
    position: "Founder, Growth Marketing Agency",
    image: "https://randomuser.me/api/portraits/men/2.jpg",
    text: "Working with Harpreet has transformed how we operate. She quickly understood our business needs and implemented systems that streamlined our processes. Her team management skills are exceptional, and she's become an integral part of our success."
  },
  {
    name: "Emily Rodriguez",
    position: "Director, Global Consulting Firm",
    image: "https://randomuser.me/api/portraits/women/3.jpg",
    text: "I've worked with many virtual assistants, but Harpreet stands out for her professionalism, reliability, and strategic thinking. She doesn't just complete tasks; she improves processes and anticipates needs. I highly recommend her services."
  },
  {
    name: "David Thompson",
    position: "Small Business Owner",
    image: "https://randomuser.me/api/portraits/men/4.jpg",
    text: "As a small business owner, hiring Harpreet was one of the best decisions I've made. She handles everything from customer service to team coordination, allowing me to focus on growing my business. Her work is consistently excellent."
  }
];
---

<section id="testimonials" class="section testimonials">
  <div class="bg-shape shape-1 animate-pulse"></div>
  
  <div class="container">
    <h2 class="section-title text-center">Client Testimonials</h2>
    <p class="section-subtitle text-center">What my clients say about working with me</p>
    
    <div class="testimonial-slider">
      {testimonials.map((testimonial, index) => (
        <div class="testimonial-card card" data-index={index}>
          <div class="testimonial-content">
            <div class="quote-icon">
              <i class="fas fa-quote-left"></i>
            </div>
            <p class="testimonial-text">{testimonial.text}</p>
          </div>
          <div class="testimonial-author">
            <div class="author-image">
              <img src={testimonial.image} alt={testimonial.name} />
            </div>
            <div class="author-info">
              <h4>{testimonial.name}</h4>
              <p>{testimonial.position}</p>
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <div class="testimonial-controls">
      <button class="control-prev" aria-label="Previous testimonial">
        <i class="fas fa-chevron-left"></i>
      </button>
      <div class="testimonial-dots">
        {testimonials.map((_, index) => (
          <button class={`dot ${index === 0 ? 'active' : ''}`} data-index={index} aria-label={`Testimonial ${index + 1}`}></button>
        ))}
      </div>
      <button class="control-next" aria-label="Next testimonial">
        <i class="fas fa-chevron-right"></i>
      </button>
    </div>
  </div>
</section>

<style>
  .testimonials {
    background-color: var(--secondary);
    position: relative;
    overflow: hidden;
  }

  .section-subtitle {
    font-size: 1.2rem;
    margin-bottom: 3rem;
    color: var(--primary);
    font-weight: 500;
  }

  .testimonial-slider {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
    overflow: hidden;
    height: 400px;
  }

  .testimonial-card {
    position: absolute;
    width: 100%;
    opacity: 0;
    transform: translateX(100px);
    transition: all 0.5s ease;
    height: auto;
    display: flex;
    flex-direction: column;
  }

  .testimonial-card[data-index="0"] {
    opacity: 1;
    transform: translateX(0);
  }

  .testimonial-content {
    flex-grow: 1;
    position: relative;
    padding-top: 2rem;
  }

  .quote-icon {
    position: absolute;
    top: -10px;
    left: 0;
    font-size: 2.5rem;
    color: var(--primary-light);
    opacity: 0.3;
  }

  .testimonial-text {
    font-style: italic;
    line-height: 1.8;
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
  }

  .testimonial-author {
    display: flex;
    align-items: center;
    margin-top: auto;
    border-top: 1px solid var(--border);
    padding-top: 1.5rem;
  }

  .author-image {
    width: 70px;
    height: 70px;
    border-radius: 50%;
    overflow: hidden;
    margin-right: 1.5rem;
    border: 3px solid var(--primary-light);
    box-shadow: 0 5px 15px rgba(106, 62, 161, 0.2);
  }

  .author-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .author-info h4 {
    margin: 0 0 0.3rem;
    font-size: 1.2rem;
    color: var(--primary-dark);
  }

  .author-info p {
    margin: 0;
    font-size: 0.9rem;
    color: var(--primary);
    font-weight: 500;
  }

  .testimonial-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 2rem;
    gap: 1rem;
  }

  .control-prev, .control-next {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: var(--gradient-primary);
    color: var(--text-light);
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 5px 15px rgba(106, 62, 161, 0.2);
    transition: all 0.3s ease;
  }

  .control-prev:hover, .control-next:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 20px rgba(106, 62, 161, 0.3);
  }

  .testimonial-dots {
    display: flex;
    gap: 0.5rem;
  }

  .dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: var(--primary-light);
    opacity: 0.3;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .dot.active {
    opacity: 1;
    width: 30px;
    border-radius: 10px;
  }

  @media (max-width: 768px) {
    .testimonial-slider {
      height: 450px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const cards = document.querySelectorAll('.testimonial-card');
    const dots = document.querySelectorAll('.dot');
    const prevBtn = document.querySelector('.control-prev');
    const nextBtn = document.querySelector('.control-next');
    let currentIndex = 0;
    
    function showCard(index) {
      // Hide all cards
      cards.forEach((card, i) => {
        card.style.opacity = '0';
        card.style.transform = i < index ? 'translateX(-100px)' : 'translateX(100px)';
        dots[i].classList.remove('active');
      });
      
      // Show current card
      cards[index].style.opacity = '1';
      cards[index].style.transform = 'translateX(0)';
      dots[index].classList.add('active');
      
      currentIndex = index;
    }
    
    // Initialize
    showCard(0);
    
    // Event listeners for dots
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        showCard(index);
      });
    });
    
    // Event listeners for prev/next buttons
    prevBtn.addEventListener('click', () => {
      let newIndex = currentIndex - 1;
      if (newIndex < 0) newIndex = cards.length - 1;
      showCard(newIndex);
    });
    
    nextBtn.addEventListener('click', () => {
      let newIndex = currentIndex + 1;
      if (newIndex >= cards.length) newIndex = 0;
      showCard(newIndex);
    });
    
    // Auto-rotate testimonials
    let interval = setInterval(() => {
      let newIndex = currentIndex + 1;
      if (newIndex >= cards.length) newIndex = 0;
      showCard(newIndex);
    }, 6000);
    
    // Pause auto-rotation when interacting with controls
    const controls = document.querySelector('.testimonial-controls');
    controls.addEventListener('mouseenter', () => {
      clearInterval(interval);
    });
    
    controls.addEventListener('mouseleave', () => {
      interval = setInterval(() => {
        let newIndex = currentIndex + 1;
        if (newIndex >= cards.length) newIndex = 0;
        showCard(newIndex);
      }, 6000);
    });
  });
</script>
